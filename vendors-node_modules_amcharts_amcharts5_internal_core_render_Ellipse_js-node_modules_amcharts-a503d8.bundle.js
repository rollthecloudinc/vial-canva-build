"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkcbdc_carbon_reporting_dashboard"] = self["webpackChunkcbdc_carbon_reporting_dashboard"] || []).push([["vendors-node_modules_amcharts_amcharts5_internal_core_render_Ellipse_js-node_modules_amcharts-a503d8"],{

/***/ "./node_modules/@amcharts/amcharts5/.internal/core/render/Ellipse.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/Ellipse.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ellipse: () => (/* binding */ Ellipse)\n/* harmony export */ });\n/* harmony import */ var _Graphics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Graphics */ \"./node_modules/@amcharts/amcharts5/.internal/core/render/Graphics.js\");\n\r\n/**\r\n * Draws a Ellipse.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nclass Ellipse extends _Graphics__WEBPACK_IMPORTED_MODULE_0__.Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"radiusX\") || this.isDirty(\"radiusY\") || this.isDirty(\"rotation\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this._display.drawEllipse(0, 0, Math.abs(this.get(\"radiusX\")), Math.abs(this.get(\"radiusY\")));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Ellipse, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Ellipse\"\r\n});\r\nObject.defineProperty(Ellipse, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _Graphics__WEBPACK_IMPORTED_MODULE_0__.Graphics.classNames.concat([Ellipse.className])\r\n});\r\n//# sourceMappingURL=Ellipse.js.map\n\n//# sourceURL=webpack://cbdc-carbon-reporting-dashboard/./node_modules/@amcharts/amcharts5/.internal/core/render/Ellipse.js?");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts5/.internal/core/render/Legend.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/Legend.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Legend: () => (/* binding */ Legend)\n/* harmony export */ });\n/* harmony import */ var _Series__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Series */ \"./node_modules/@amcharts/amcharts5/.internal/core/render/Series.js\");\n/* harmony import */ var _core_render_Container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/render/Container */ \"./node_modules/@amcharts/amcharts5/.internal/core/render/Container.js\");\n/* harmony import */ var _core_render_Label__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/render/Label */ \"./node_modules/@amcharts/amcharts5/.internal/core/render/Label.js\");\n/* harmony import */ var _core_render_RoundedRectangle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/render/RoundedRectangle */ \"./node_modules/@amcharts/amcharts5/.internal/core/render/RoundedRectangle.js\");\n/* harmony import */ var _core_util_Template__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Template */ \"./node_modules/@amcharts/amcharts5/.internal/core/util/Template.js\");\n/* harmony import */ var _core_util_List__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/List */ \"./node_modules/@amcharts/amcharts5/.internal/core/util/List.js\");\n/* harmony import */ var _core_util_Utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Utils */ \"./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * A universal legend control.\r\n *\r\n * @important\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/} for more info\r\n */\r\nclass Legend extends _Series__WEBPACK_IMPORTED_MODULE_0__.Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * List of all [[Container]] elements for legend items.\r\n         *\r\n         * @default new ListTemplate<Container>\r\n         */\r\n        Object.defineProperty(this, \"itemContainers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new _core_util_List__WEBPACK_IMPORTED_MODULE_1__.ListTemplate(_core_util_Template__WEBPACK_IMPORTED_MODULE_2__.Template.new({}), () => _core_render_Container__WEBPACK_IMPORTED_MODULE_3__.Container._new(this._root, {\r\n                themeTags: _core_util_Utils__WEBPACK_IMPORTED_MODULE_4__.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\"]),\r\n                themeTagsSelf: _core_util_Utils__WEBPACK_IMPORTED_MODULE_4__.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"]),\r\n                background: _core_render_RoundedRectangle__WEBPACK_IMPORTED_MODULE_5__.RoundedRectangle.new(this._root, {\r\n                    themeTags: _core_util_Utils__WEBPACK_IMPORTED_MODULE_4__.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\", \"background\"]),\r\n                    themeTagsSelf: _core_util_Utils__WEBPACK_IMPORTED_MODULE_4__.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"])\r\n                })\r\n            }, [this.itemContainers.template]))\r\n        });\r\n        /**\r\n         * List of legend marker elements.\r\n         *\r\n         * @default new ListTemplate<Container>\r\n         */\r\n        Object.defineProperty(this, \"markers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new _core_util_List__WEBPACK_IMPORTED_MODULE_1__.ListTemplate(_core_util_Template__WEBPACK_IMPORTED_MODULE_2__.Template.new({}), () => _core_render_Container__WEBPACK_IMPORTED_MODULE_3__.Container._new(this._root, {\r\n                themeTags: _core_util_Utils__WEBPACK_IMPORTED_MODULE_4__.mergeTags(this.markers.template.get(\"themeTags\", []), [\"legend\", \"marker\"])\r\n            }, [this.markers.template]))\r\n        });\r\n        /**\r\n         * List of legend label elements.\r\n         *\r\n         * @default new ListTemplate<Label>\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new _core_util_List__WEBPACK_IMPORTED_MODULE_1__.ListTemplate(_core_util_Template__WEBPACK_IMPORTED_MODULE_2__.Template.new({}), () => _core_render_Label__WEBPACK_IMPORTED_MODULE_6__.Label._new(this._root, {\r\n                themeTags: _core_util_Utils__WEBPACK_IMPORTED_MODULE_4__.mergeTags(this.labels.template.get(\"themeTags\", []), [\"legend\", \"label\"])\r\n            }, [this.labels.template]))\r\n        });\r\n        /**\r\n         * List of legend value label elements.\r\n         *\r\n         * @default new ListTemplate<label>\r\n         */\r\n        Object.defineProperty(this, \"valueLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new _core_util_List__WEBPACK_IMPORTED_MODULE_1__.ListTemplate(_core_util_Template__WEBPACK_IMPORTED_MODULE_2__.Template.new({}), () => _core_render_Label__WEBPACK_IMPORTED_MODULE_6__.Label._new(this._root, {\r\n                themeTags: _core_util_Utils__WEBPACK_IMPORTED_MODULE_4__.mergeTags(this.valueLabels.template.get(\"themeTags\", []), [\"legend\", \"label\", \"value\"])\r\n            }, [this.valueLabels.template]))\r\n        });\r\n        /**\r\n         * List of rectangle elements used for default legend markers.\r\n         *\r\n         * @default new ListTemplate<RoundedRectangle>\r\n         */\r\n        Object.defineProperty(this, \"markerRectangles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new _core_util_List__WEBPACK_IMPORTED_MODULE_1__.ListTemplate(_core_util_Template__WEBPACK_IMPORTED_MODULE_2__.Template.new({}), () => _core_render_RoundedRectangle__WEBPACK_IMPORTED_MODULE_5__.RoundedRectangle._new(this._root, {\r\n                themeTags: _core_util_Utils__WEBPACK_IMPORTED_MODULE_4__.mergeTags(this.markerRectangles.template.get(\"themeTags\", []), [\"legend\", \"marker\", \"rectangle\"])\r\n            }, [this.markerRectangles.template]))\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = _core_util_Utils__WEBPACK_IMPORTED_MODULE_4__.mergeTags(this._settings.themeTags, [\"legend\"]);\r\n        this.fields.push(\"name\", \"stroke\", \"fill\");\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeItemContainer(dataItem) {\r\n        const itemContainer = this.children.push(this.itemContainers.make());\r\n        itemContainer._setDataItem(dataItem);\r\n        this.itemContainers.push(itemContainer);\r\n        itemContainer.states.create(\"disabled\", {});\r\n        return itemContainer;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeMarker() {\r\n        const marker = this.markers.make();\r\n        this.markers.push(marker);\r\n        marker.states.create(\"disabled\", {});\r\n        return marker;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel() {\r\n        const label = this.labels.make();\r\n        label.states.create(\"disabled\", {});\r\n        return label;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeValueLabel() {\r\n        const valueLabel = this.valueLabels.make();\r\n        valueLabel.states.create(\"disabled\", {});\r\n        return valueLabel;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeMarkerRectangle() {\r\n        const markerRectangle = this.markerRectangles.make();\r\n        markerRectangle.states.create(\"disabled\", {});\r\n        return markerRectangle;\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        const itemContainer = this.makeItemContainer(dataItem);\r\n        const nameField = this.get(\"nameField\");\r\n        const fillField = this.get(\"fillField\");\r\n        const strokeField = this.get(\"strokeField\");\r\n        if (itemContainer) {\r\n            const clickTarget = this.get(\"clickTarget\", \"itemContainer\");\r\n            const item = dataItem.dataContext;\r\n            if (item && item.set) {\r\n                item.set(\"legendDataItem\", dataItem);\r\n            }\r\n            itemContainer._setDataItem(dataItem);\r\n            dataItem.set(\"itemContainer\", itemContainer);\r\n            const marker = this.makeMarker();\r\n            if (marker) {\r\n                itemContainer.children.push(marker);\r\n                marker._setDataItem(dataItem);\r\n                dataItem.set(\"marker\", marker);\r\n                const useDefaultMarker = this.get(\"useDefaultMarker\");\r\n                const markerRectangle = marker.children.push(this.makeMarkerRectangle());\r\n                let fill = dataItem.get(\"fill\");\r\n                let stroke = dataItem.get(\"stroke\");\r\n                dataItem.set(\"markerRectangle\", markerRectangle);\r\n                if (item && item.get) {\r\n                    fill = item.get(fillField, fill);\r\n                    stroke = item.get(strokeField, stroke);\r\n                }\r\n                if (!stroke) {\r\n                    stroke = fill;\r\n                }\r\n                if (!useDefaultMarker) {\r\n                    if (item && item.createLegendMarker) {\r\n                        item.createLegendMarker();\r\n                    }\r\n                }\r\n                else {\r\n                    if (item.on) {\r\n                        item.on(fillField, () => {\r\n                            markerRectangle.set(\"fill\", item.get(fillField));\r\n                        });\r\n                        item.on(strokeField, () => {\r\n                            markerRectangle.set(\"stroke\", item.get(strokeField));\r\n                        });\r\n                    }\r\n                }\r\n                markerRectangle.setAll({ fill, stroke });\r\n                // this solves if template field is set on slice\r\n                const component = item.component;\r\n                if (component && component.updateLegendMarker) {\r\n                    component.updateLegendMarker(item);\r\n                }\r\n            }\r\n            const label = this.makeLabel();\r\n            if (label) {\r\n                itemContainer.children.push(label);\r\n                label._setDataItem(dataItem);\r\n                dataItem.set(\"label\", label);\r\n                label.text.on(\"text\", () => {\r\n                    itemContainer.set(\"ariaLabel\", label.text._getText() + (this.get(\"clickTarget\") !== \"none\" ? \"; \" + this._t(\"Press ENTER to toggle\") : \"\"));\r\n                });\r\n                if (item && item.get) {\r\n                    dataItem.set(\"name\", item.get(nameField));\r\n                }\r\n                let name = dataItem.get(\"name\");\r\n                if (name) {\r\n                    label.set(\"text\", name);\r\n                }\r\n            }\r\n            const valueLabel = this.makeValueLabel();\r\n            if (valueLabel) {\r\n                itemContainer.children.push(valueLabel);\r\n                valueLabel._setDataItem(dataItem);\r\n                dataItem.set(\"valueLabel\", valueLabel);\r\n            }\r\n            if (item && item.show) {\r\n                item.on(\"visible\", (visible) => {\r\n                    itemContainer.set(\"disabled\", !visible);\r\n                });\r\n                if (!item.get(\"visible\")) {\r\n                    itemContainer.set(\"disabled\", true);\r\n                }\r\n                if (clickTarget != \"none\") {\r\n                    let clickContainer = itemContainer;\r\n                    if (clickTarget == \"marker\") {\r\n                        clickContainer = marker;\r\n                    }\r\n                    this._addClickEvents(clickContainer, item, dataItem);\r\n                }\r\n            }\r\n            // Sort children\r\n            this.children.values.sort((a, b) => {\r\n                const targetA = a.dataItem.dataContext;\r\n                const targetB = b.dataItem.dataContext;\r\n                if (targetA && targetB) {\r\n                    const indexA = this.data.indexOf(targetA);\r\n                    const indexB = this.data.indexOf(targetB);\r\n                    if (indexA > indexB) {\r\n                        return 1;\r\n                    }\r\n                    else if (indexA < indexB) {\r\n                        return -1;\r\n                    }\r\n                }\r\n                return 0;\r\n            });\r\n            if (item && item.updateLegendValue) {\r\n                item.updateLegendValue();\r\n            }\r\n        }\r\n    }\r\n    _addClickEvents(container, item, dataItem) {\r\n        container.set(\"cursorOverStyle\", \"pointer\");\r\n        container.events.on(\"pointerover\", () => {\r\n            const component = item.component;\r\n            if (component && component.hoverDataItem) {\r\n                component.hoverDataItem(item);\r\n            }\r\n        });\r\n        container.events.on(\"pointerout\", () => {\r\n            const component = item.component;\r\n            if (component && component.hoverDataItem) {\r\n                component.unhoverDataItem(item);\r\n            }\r\n        });\r\n        container.events.on(\"click\", () => {\r\n            const labelText = dataItem.get(\"label\").text._getText();\r\n            if (item.show && item.isHidden && (item.isHidden() || item.get(\"visible\") === false)) {\r\n                item.show();\r\n                container.set(\"disabled\", false);\r\n                this._root.readerAlert(this._t(\"%1 shown\", this._root.locale, labelText));\r\n            }\r\n            else if (item.hide) {\r\n                item.hide();\r\n                container.set(\"disabled\", true);\r\n                this._root.readerAlert(this._t(\"%1 hidden\", this._root.locale, labelText));\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const dataContext = dataItem.dataContext;\r\n        if (dataContext && dataContext.get) {\r\n            const di = dataContext.get(\"legendDataItem\");\r\n            if (di == dataItem) {\r\n                dataContext.set(\"legendDataItem\", undefined);\r\n            }\r\n        }\r\n        let itemContainer = dataItem.get(\"itemContainer\");\r\n        if (itemContainer) {\r\n            this.itemContainers.removeValue(itemContainer);\r\n            itemContainer.dispose();\r\n        }\r\n        let marker = dataItem.get(\"marker\");\r\n        if (marker) {\r\n            this.markers.removeValue(marker);\r\n            marker.dispose();\r\n        }\r\n        let markerRectangle = dataItem.get(\"markerRectangle\");\r\n        if (markerRectangle) {\r\n            this.markerRectangles.removeValue(markerRectangle);\r\n            markerRectangle.dispose();\r\n        }\r\n        let label = dataItem.get(\"label\");\r\n        if (label) {\r\n            this.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        let valueLabel = dataItem.get(\"valueLabel\");\r\n        if (valueLabel) {\r\n            this.valueLabels.removeValue(valueLabel);\r\n            valueLabel.dispose();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Legend, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Legend\"\r\n});\r\nObject.defineProperty(Legend, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _Series__WEBPACK_IMPORTED_MODULE_0__.Series.classNames.concat([Legend.className])\r\n});\r\n//# sourceMappingURL=Legend.js.map\n\n//# sourceURL=webpack://cbdc-carbon-reporting-dashboard/./node_modules/@amcharts/amcharts5/.internal/core/render/Legend.js?");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts5/.internal/core/render/SpriteResizer.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/SpriteResizer.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SpriteResizer: () => (/* binding */ SpriteResizer)\n/* harmony export */ });\n/* harmony import */ var _Container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Container */ \"./node_modules/@amcharts/amcharts5/.internal/core/render/Container.js\");\n/* harmony import */ var _util_Percent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/Percent */ \"./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js\");\n/* harmony import */ var _RoundedRectangle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RoundedRectangle */ \"./node_modules/@amcharts/amcharts5/.internal/core/render/RoundedRectangle.js\");\n/* harmony import */ var _Rectangle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Rectangle */ \"./node_modules/@amcharts/amcharts5/.internal/core/render/Rectangle.js\");\n/* harmony import */ var _util_Color__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Color */ \"./node_modules/@amcharts/amcharts5/.internal/core/util/Color.js\");\n/* harmony import */ var _util_Math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/Math */ \"./node_modules/@amcharts/amcharts5/.internal/core/util/Math.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass SpriteResizer extends _Container__WEBPACK_IMPORTED_MODULE_0__.Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"rectangle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(_Rectangle__WEBPACK_IMPORTED_MODULE_1__.Rectangle.new(this._root, { themeTags: [\"rectangle\"], fillOpacity: 0, fill: (0,_util_Color__WEBPACK_IMPORTED_MODULE_2__.color)(0xFFFFFF) }))\r\n        });\r\n        Object.defineProperty(this, \"gripL\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._createGrip(\"left\")\r\n        });\r\n        Object.defineProperty(this, \"gripR\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._createGrip(\"right\")\r\n        });\r\n        Object.defineProperty(this, \"gripT\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._createGrip(\"top\")\r\n        });\r\n        Object.defineProperty(this, \"gripB\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._createGrip(\"bottom\")\r\n        });\r\n        Object.defineProperty(this, \"_is\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_ix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_iw\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_positionDP\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isHover\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.addTag(\"resizer\");\r\n        this.set(\"visible\", false);\r\n        this.gripL.events.on(\"dragged\", (e) => {\r\n            this._resize(e.target, -1);\r\n        });\r\n        this.gripR.events.on(\"dragged\", (e) => {\r\n            this._resize(e.target, 1);\r\n        });\r\n        this.gripL.events.on(\"dragstart\", (e) => {\r\n            this._resizeStart(e.target);\r\n        });\r\n        this.gripR.events.on(\"dragstart\", (e) => {\r\n            this._resizeStart(e.target);\r\n        });\r\n        this.gripT.events.on(\"dragged\", (e) => {\r\n            this._rotate(e, 90);\r\n        });\r\n        this.gripB.events.on(\"dragged\", (e) => {\r\n            this._rotate(e, -90);\r\n        });\r\n        this.gripT.events.on(\"dragstart\", (e) => {\r\n            this._resizeStart(e.target);\r\n        });\r\n        this.gripB.events.on(\"dragstart\", (e) => {\r\n            this._resizeStart(e.target);\r\n        });\r\n    }\r\n    _resizeStart(grip) {\r\n        const sprite = this.get(\"sprite\");\r\n        if (sprite) {\r\n            this._is = sprite.get(\"scale\", 1);\r\n            this._ix = grip.x();\r\n            this._iw = this.width() / 2;\r\n        }\r\n    }\r\n    _resize(grip, c) {\r\n        const sprite = this.get(\"sprite\");\r\n        const spriteTemplate = this.get(\"spriteTemplate\");\r\n        if (sprite) {\r\n            const scale = Math.max(0.01, this._is * (1 + c * (grip.x() - this._ix) / this._iw));\r\n            if (spriteTemplate) {\r\n                spriteTemplate.set(\"scale\", scale);\r\n            }\r\n            else {\r\n                sprite.set(\"scale\", scale);\r\n            }\r\n            sprite.states.lookup(\"default\").set(\"scale\", scale);\r\n            this._updatePositions();\r\n        }\r\n    }\r\n    _rotate(e, delta) {\r\n        const sprite = this.get(\"sprite\");\r\n        const spriteTemplate = this.get(\"spriteTemplate\");\r\n        if (sprite) {\r\n            const parent = this.parent;\r\n            if (parent) {\r\n                const rotationStep = this.get(\"rotationStep\", 10);\r\n                let angle = Math.round(((_util_Math__WEBPACK_IMPORTED_MODULE_3__.getAngle({ x: this.x(), y: this.y() }, parent.toLocal(e.point)) + delta) / rotationStep)) * rotationStep;\r\n                if (spriteTemplate) {\r\n                    spriteTemplate.set(\"rotation\", angle);\r\n                }\r\n                else {\r\n                    sprite.set(\"rotation\", angle);\r\n                }\r\n                sprite.states.lookup(\"default\").set(\"rotation\", angle);\r\n                this._updatePositions();\r\n            }\r\n        }\r\n    }\r\n    _createGrip(themeTag) {\r\n        const container = this.children.push(_Container__WEBPACK_IMPORTED_MODULE_0__.Container.new(this._root, {\r\n            themeTags: [\"grip\", themeTag],\r\n            setStateOnChildren: true,\r\n            draggable: true\r\n        }));\r\n        container.children.push(_RoundedRectangle__WEBPACK_IMPORTED_MODULE_4__.RoundedRectangle.new(this._root, {\r\n            themeTags: [\"outline\"],\r\n            centerX: _util_Percent__WEBPACK_IMPORTED_MODULE_5__.p50,\r\n            centerY: _util_Percent__WEBPACK_IMPORTED_MODULE_5__.p50\r\n        }));\r\n        container.children.push(_RoundedRectangle__WEBPACK_IMPORTED_MODULE_4__.RoundedRectangle.new(this._root, {\r\n            centerX: _util_Percent__WEBPACK_IMPORTED_MODULE_5__.p50,\r\n            centerY: _util_Percent__WEBPACK_IMPORTED_MODULE_5__.p50\r\n        }));\r\n        return container;\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"sprite\")) {\r\n            const sprite = this.get(\"sprite\");\r\n            if (sprite) {\r\n                this.show(0);\r\n                this.setPrivate(\"visible\", true);\r\n                this._updatePositions();\r\n                const parent = sprite.parent;\r\n                if (parent) {\r\n                    parent.children.moveValue(this, 0);\r\n                }\r\n                this._positionDP = sprite.events.on(\"positionchanged\", () => {\r\n                    this._updatePositions();\r\n                });\r\n            }\r\n            else {\r\n                this.hide(0);\r\n                this.setPrivate(\"visible\", false);\r\n                if (this._positionDP) {\r\n                    this._positionDP.dispose();\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\")) {\r\n            this._updatePositions();\r\n        }\r\n    }\r\n    _updatePositions() {\r\n        const sprite = this.get(\"sprite\");\r\n        if (sprite) {\r\n            let bounds = sprite.localBounds();\r\n            let scale = sprite.get(\"scale\", 1);\r\n            let d = 20;\r\n            let w = (bounds.right - bounds.left) * scale + d;\r\n            let h = (bounds.bottom - bounds.top) * scale + d;\r\n            let a = sprite.get(\"rotation\", 0);\r\n            const rectangle = this.rectangle;\r\n            let cx = sprite.get(\"centerX\", _util_Percent__WEBPACK_IMPORTED_MODULE_5__.p50);\r\n            let cy = sprite.get(\"centerY\", _util_Percent__WEBPACK_IMPORTED_MODULE_5__.p50);\r\n            let cxr = 0;\r\n            if (cx instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_5__.Percent) {\r\n                cxr = cx.value;\r\n            }\r\n            let cyr = 0;\r\n            if (cy instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_5__.Percent) {\r\n                cyr = cy.value;\r\n            }\r\n            rectangle.setAll({ centerX: cx, centerY: cy, width: w, height: h });\r\n            this.setAll({ x: sprite.x() + d * (cxr - 0.5) * _util_Math__WEBPACK_IMPORTED_MODULE_3__.cos(a) - d * (cyr - 0.5) * _util_Math__WEBPACK_IMPORTED_MODULE_3__.sin(a), y: sprite.y() + d * (cyr - 0.5) * _util_Math__WEBPACK_IMPORTED_MODULE_3__.cos(a) + d * (cxr - 0.5) * _util_Math__WEBPACK_IMPORTED_MODULE_3__.sin(a), width: w, height: h, rotation: a });\r\n            this.gripT.setAll({ x: (0.5 - cxr) * w, y: -cyr * h });\r\n            this.gripB.setAll({ x: (0.5 - cxr) * w, y: (1 - cyr) * h });\r\n            this.gripL.setAll({ x: -cxr * w, y: (0.5 - cyr) * h });\r\n            this.gripR.setAll({ x: (1 - cxr) * w, y: (0.5 - cyr) * h });\r\n            this.rectangle.setAll({ width: w, height: h });\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SpriteResizer, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"SpriteResizer\"\r\n});\r\nObject.defineProperty(SpriteResizer, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _Container__WEBPACK_IMPORTED_MODULE_0__.Container.classNames.concat([SpriteResizer.className])\r\n});\r\n//# sourceMappingURL=SpriteResizer.js.map\n\n//# sourceURL=webpack://cbdc-carbon-reporting-dashboard/./node_modules/@amcharts/amcharts5/.internal/core/render/SpriteResizer.js?");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts5/.internal/core/util/Modal.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/Modal.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Modal: () => (/* binding */ Modal)\n/* harmony export */ });\n/* harmony import */ var _Entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Entity */ \"./node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js\");\n/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Utils */ \"./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js\");\n/* harmony import */ var _core_util_Disposer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/util/Disposer */ \"./node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js\");\n\r\n\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nlet rules;\r\n/**\r\n * @ignore\r\n */\r\nfunction modalCSS(element, root, _prefix) {\r\n    const ic = root.interfaceColors;\r\n    const active = ic.get(\"secondaryButton\").toCSS();\r\n    const text = ic.get(\"text\").toCSS();\r\n    const shadow = ic.get(\"alternativeBackground\").toCSS(0.45);\r\n    //const altbg = ic.get(\"alternativeBackground\")!.toCSS();\r\n    if (!rules) {\r\n        const disposer = new _core_util_Disposer__WEBPACK_IMPORTED_MODULE_0__.MultiDisposer([\r\n            new _Utils__WEBPACK_IMPORTED_MODULE_1__.StyleRule(element, \".am5-modal\", {\r\n                \"width\": \"100%\",\r\n                \"height\": \"100%\",\r\n                \"position\": \"absolute\",\r\n                \"z-index\": \"100000\",\r\n                \"top\": \"0\",\r\n                \"left\": \"0\"\r\n            }),\r\n            new _Utils__WEBPACK_IMPORTED_MODULE_1__.StyleRule(element, \".am5-modal-curtain\", {\r\n                \"top\": \"0\",\r\n                \"left\": \"0\",\r\n                \"width\": \"100%\",\r\n                \"height\": \"100%\",\r\n                \"position\": \"absolute\",\r\n                \"background\": ic.get(\"background\").toCSS(0.5),\r\n                \"z-index\": \"100\"\r\n            }),\r\n            new _Utils__WEBPACK_IMPORTED_MODULE_1__.StyleRule(element, \".am5-modal-wrapper\", {\r\n                \"top\": \"0\",\r\n                \"left\": \"0\",\r\n                \"width\": \"100%\",\r\n                \"height\": \"100%\",\r\n                \"position\": \"absolute\",\r\n                \"text-align\": \"center\",\r\n                \"white-space\": \"nowrap\",\r\n                \"background\": ic.get(\"background\").toCSS(0.5),\r\n                \"z-index\": \"101\"\r\n            }),\r\n            new _Utils__WEBPACK_IMPORTED_MODULE_1__.StyleRule(element, \".am5-modal-wrapper:before\", {\r\n                \"content\": \"''\",\r\n                \"display\": \"inline-block\",\r\n                \"height\": \"100%\",\r\n                \"vertical-align\": \"middle\",\r\n                \"margin-right\": \"-0.25em\"\r\n            }),\r\n            new _Utils__WEBPACK_IMPORTED_MODULE_1__.StyleRule(element, \".am5-modal-content\", {\r\n                \"display\": \"inline-block\",\r\n                \"padding\": \"1.2em\",\r\n                \"vertical-align\": \"middle\",\r\n                \"text-align\": \"left\",\r\n                \"white-space\": \"normal\",\r\n                \"background\": ic.get(\"background\").toCSS(),\r\n                //\"border\": \"1px solid \" + ic.get(\"alternativeBackground\")!.toCSS(),\r\n                \"border-radius\": \"4px\",\r\n                \"-webkit-box-shadow\": \"0px 0px 36px 0px \" + shadow,\r\n                \"box-shadow\": \"0px 0px 36px 0px \" + shadow,\r\n                \"color\": text\r\n            }),\r\n            new _Utils__WEBPACK_IMPORTED_MODULE_1__.StyleRule(element, \".am5-modal-content h1\", {\r\n                \"font-size\": \"1em\",\r\n                \"margin\": \"0 0 0.5em 0\"\r\n            }),\r\n            new _Utils__WEBPACK_IMPORTED_MODULE_1__.StyleRule(element, \".am5-modal-table\", {\r\n                \"display\": \"table\",\r\n                \"margin\": \"1em 0\"\r\n            }),\r\n            new _Utils__WEBPACK_IMPORTED_MODULE_1__.StyleRule(element, \".am5-modal-table-row\", {\r\n                \"display\": \"table-row\"\r\n            }),\r\n            new _Utils__WEBPACK_IMPORTED_MODULE_1__.StyleRule(element, \".am5-modal-table-heading\", {\r\n                \"display\": \"table-heading\",\r\n                \"padding\": \"3px 10px 3px 0\",\r\n            }),\r\n            new _Utils__WEBPACK_IMPORTED_MODULE_1__.StyleRule(element, \".am5-modal-table-cell\", {\r\n                \"display\": \"table-cell\",\r\n                \"padding\": \"3px 0 3px 0\",\r\n            }),\r\n            new _Utils__WEBPACK_IMPORTED_MODULE_1__.StyleRule(element, \".am5-modal-table-cell > *\", {\r\n                \"vertical-align\": \"middle\"\r\n            }),\r\n            new _Utils__WEBPACK_IMPORTED_MODULE_1__.StyleRule(element, \".am5-modal-content input[type=text], .am5-modal-content input[type=number], .am5-modal-content select\", {\r\n                \"border\": \"1px solid \" + active,\r\n                \"border-radius\": \"4px\",\r\n                \"padding\": \"3px 5px\",\r\n                \"margin\": \"2px\"\r\n            }),\r\n            new _Utils__WEBPACK_IMPORTED_MODULE_1__.StyleRule(element, \".am5-modal-input-narrow\", {\r\n                \"width\": \"50px\"\r\n            }),\r\n            new _Utils__WEBPACK_IMPORTED_MODULE_1__.StyleRule(element, \".am5-modal-button\", {\r\n                \"font-weight\": \"400\",\r\n                \"color\": ic.get(\"secondaryButtonText\").toCSS(),\r\n                \"line-height\": \"1.5\",\r\n                \"text-align\": \"center\",\r\n                \"text-decoration\": \"none\",\r\n                \"vertical-align\": \"middle\",\r\n                \"cursor\": \"pointer\",\r\n                \"padding\": \"0.2em 0.8em\",\r\n                \"font-size\": \"1em\",\r\n                \"border-radius\": \"0.25em\",\r\n                \"margin\": \"0 0.25em 0 0\",\r\n                \"border\": \"1px solid \" + ic.get(\"secondaryButtonStroke\").toCSS(),\r\n                \"background\": ic.get(\"secondaryButton\").toCSS()\r\n            }),\r\n            new _Utils__WEBPACK_IMPORTED_MODULE_1__.StyleRule(element, \".am5-modal-button:hover\", {\r\n                \"background\": ic.get(\"secondaryButtonHover\").toCSS()\r\n            }),\r\n            new _Utils__WEBPACK_IMPORTED_MODULE_1__.StyleRule(element, \".am5-modal-button.am5-modal-primary\", {\r\n                \"color\": ic.get(\"primaryButtonText\").toCSS(),\r\n                \"border\": \"1px solid \" + ic.get(\"primaryButtonStroke\").toCSS(),\r\n                \"background\": ic.get(\"primaryButton\").toCSS()\r\n            }),\r\n            new _Utils__WEBPACK_IMPORTED_MODULE_1__.StyleRule(element, \".am5-modal-button.am5-modal-primary:hover\", {\r\n                \"background\": ic.get(\"primaryButtonHover\").toCSS()\r\n            }),\r\n        ]);\r\n        rules = new _core_util_Disposer__WEBPACK_IMPORTED_MODULE_0__.CounterDisposer(() => {\r\n            rules = undefined;\r\n            disposer.dispose();\r\n        });\r\n    }\r\n    return rules.increment();\r\n}\r\n/**\r\n * Used to display a modal dialog with HTML content.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/modal-popups/} for more info\r\n */\r\nclass Modal extends _Entity__WEBPACK_IMPORTED_MODULE_2__.Entity {\r\n    //protected _currentPass: number = 0;\r\n    _afterNew() {\r\n        // Applying themes because this will not have parents\r\n        super._afterNewApplyThemes();\r\n        // Defaults\r\n        this._setRawDefault(\"deactivateRoot\", true);\r\n        // Load CSS\r\n        modalCSS(_Utils__WEBPACK_IMPORTED_MODULE_1__.getShadowRoot(this._root.dom), this._root);\r\n        // Create elements\r\n        const container = document.createElement(\"div\");\r\n        container.className = \"am5-modal\";\r\n        container.style.display = \"none\";\r\n        this.root._inner.appendChild(container);\r\n        this.setPrivate(\"container\", container);\r\n        const curtain = document.createElement(\"div\");\r\n        curtain.className = \"am5-modal-curtain\";\r\n        container.appendChild(curtain);\r\n        this.setPrivate(\"curtain\", curtain);\r\n        this._disposers.push(_Utils__WEBPACK_IMPORTED_MODULE_1__.addEventListener(curtain, \"click\", () => {\r\n            this.cancel();\r\n        }));\r\n        const wrapper = document.createElement(\"div\");\r\n        wrapper.className = \"am5-modal-wrapper\";\r\n        container.appendChild(wrapper);\r\n        this.setPrivate(\"wrapper\", wrapper);\r\n        const content = document.createElement(\"div\");\r\n        content.className = \"am5-modal-content\";\r\n        wrapper.appendChild(content);\r\n        this.setPrivate(\"content\", content);\r\n        const html = this.get(\"content\");\r\n        if (html) {\r\n            content.innerHTML = html;\r\n        }\r\n        // Close on ESC\r\n        if (_Utils__WEBPACK_IMPORTED_MODULE_1__.supports(\"keyboardevents\")) {\r\n            this._disposers.push(_Utils__WEBPACK_IMPORTED_MODULE_1__.addEventListener(document, \"keydown\", (ev) => {\r\n                if (this.isOpen() && ev.keyCode == 27) {\r\n                    this.cancel();\r\n                }\r\n            }));\r\n        }\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"content\")) {\r\n            this.getPrivate(\"content\").innerHTML = this.get(\"content\", \"\");\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if modal is currently open.\r\n     *\r\n     * @return  Modal open?\r\n     */\r\n    isOpen() {\r\n        return this.getPrivate(\"container\").style.display != \"none\";\r\n    }\r\n    /**\r\n     * Opens modal.\r\n     */\r\n    open() {\r\n        this.getPrivate(\"container\").style.display = \"block\";\r\n        if (this.get(\"deactivateRoot\")) {\r\n            this.setTimeout(() => {\r\n                this._root._renderer.interactionsEnabled = false;\r\n            }, 10);\r\n        }\r\n        this.events.dispatch(\"opened\", {\r\n            type: \"opened\",\r\n            target: this\r\n        });\r\n    }\r\n    /**\r\n     * Closes modal.\r\n     */\r\n    close() {\r\n        this.getPrivate(\"container\").style.display = \"none\";\r\n        if (this.get(\"deactivateRoot\")) {\r\n            this._root._renderer.interactionsEnabled = true;\r\n        }\r\n        this.events.dispatch(\"closed\", {\r\n            type: \"closed\",\r\n            target: this\r\n        });\r\n    }\r\n    /**\r\n     * Closes modal and invokes `cancelled` event.\r\n     */\r\n    cancel() {\r\n        this.getPrivate(\"container\").style.display = \"none\";\r\n        if (this.get(\"deactivateRoot\")) {\r\n            this._root._renderer.interactionsEnabled = true;\r\n        }\r\n        this.events.dispatch(\"cancelled\", {\r\n            type: \"cancelled\",\r\n            target: this\r\n        });\r\n    }\r\n    /**\r\n     * Disposes modal.\r\n     */\r\n    dispose() {\r\n        super.dispose();\r\n        this.root.dom.removeChild(this.getPrivate(\"container\"));\r\n    }\r\n}\r\nObject.defineProperty(Modal, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Modal\"\r\n});\r\nObject.defineProperty(Modal, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _Entity__WEBPACK_IMPORTED_MODULE_2__.Entity.classNames.concat([Modal.className])\r\n});\r\n//# sourceMappingURL=Modal.js.map\n\n//# sourceURL=webpack://cbdc-carbon-reporting-dashboard/./node_modules/@amcharts/amcharts5/.internal/core/util/Modal.js?");

/***/ })

}]);